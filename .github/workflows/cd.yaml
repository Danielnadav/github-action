name: Kubernetes Workflow

on: [push]

jobs:
  aws-access:
    name: aws setup and access to eks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Install and configure kubectl
        run: |
          VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
          curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
              --progress-bar \
              --location \
              --remote-name
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Update AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
      - name: Set KUBECONFIG
        run: |
          aws eks --region eu-north-1 update-kubeconfig --name dev-cluster
         

      - name: Debug Kubeconfig
        run: |
          cat $HOME/.kube/config
          echo "KUBECONFIG=$KUBECONFIG"
          kubectl get nodes
      - name: run kubectl get pods and ns 
        run: |
          kubectl get pods

      - name: helm ls
        run: |
          helm ls
      - name: k get ns
        run: |
          kubectl get ns
      # - name: Print Repository Structure
      #   run: ls -R | grep service.yaml

      - name: k apply -f
        run: |
          kubectl apply -f .github/workflows/service.yaml -n play

      - name: k get pod
        run: |
          kubectl get pods -n play

      - name: Helm Install/Upgrade Main Chart
        run: |
          helm install pgadmin .github/workflows/mkdev-pgadmin-0.1.0.tgz -n play

      # - name: Helm Install pgadmin with values file
      #   run: |
      #     helm install pgadmin .github/workflows/mkdev-pgadmin-0.1.0.tgz --values path/to/your/values.yaml
      - name: Helm Upgrade Main Chart
        run: |
          helm upgrade pgadmin .github/workflows/mkdev-pgadmin-0.1.0.tgz -n play
        continue-on-error: true

      - name: Check Helm Upgrade
        run: |
          if [[ $? -eq 0 ]]; then
            helm ls
          else
            echo "Helm chart upgrade failed."
          fi
        if: steps.helm_upgrade.outcome == 'success'

